//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version Beta 1.2
//
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Beta Version
//
package com.contactpoint.model.client.prv;

import java.util.Hashtable;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class QuestionAnswer implements KvmSerializable {

	//public static final String NAMESPACE = "http://tmsconsultant.model/2012/common";
	public static final String NAMESPACE = "http://TMSConsultant.Model/2013/TMSConsultant";
	public final static String MM_NAMESPACE = "http://schemas.datacontract.org/2004/07/TollTransitions.API.DataContracts";
	
	public String number;
	public String answer;
	public String question;
	public String questionCode;
	public boolean isMM;

	public QuestionAnswer(){}

	public QuestionAnswer(SoapObject soapObject){

		if (soapObject.hasProperty("Number"))
		{
			Object obj = soapObject.getProperty("Number");
			if (obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j11 =(SoapPrimitive) soapObject.getProperty("Number");
				number = j11.toString();
			}
		}
		if (soapObject.hasProperty("Answer"))
		{
			Object obj = soapObject.getProperty("Answer");
			if (obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j12 =(SoapPrimitive) soapObject.getProperty("Answer");
				answer = j12.toString();
			}
		}
		if (soapObject.hasProperty("Question"))
		{
			Object obj = soapObject.getProperty("Question");
			if (obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j13 =(SoapPrimitive) soapObject.getProperty("Question");
				question = j13.toString();
			}
		}
		if (soapObject.hasProperty("QuestionCode"))
		{
			Object obj = soapObject.getProperty("QuestionCode");
			if (obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j14 =(SoapPrimitive) soapObject.getProperty("QuestionCode");
				questionCode = j14.toString();
			}
		}
	}
	@Override
	public Object getProperty(int arg0) {
		switch(arg0){
		case 0:
			return number;
		case 1:
			return answer;
		case 2:
			return question;
		case 3:
			return questionCode;
		}
		return null;
	}
	@Override
	public int getPropertyCount() {
		return 4;
	}
	@Override
	public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
		info.namespace = isMM ? MM_NAMESPACE : NAMESPACE;
		switch(index){
		case 0:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Number";
			break;
		case 1:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Answer";
			break;
		case 2:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Question";
			break;
		case 3:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "QuestionCode";
			break;
		}
	}
	@Override
	public void setProperty(int index, Object value) {
		switch(index){
		case 0:
			number = value.toString() ;
			break;
		case 1:
			answer = value.toString() ;
			break;
		case 2:
			question = value.toString() ;
			break;
		case 3:
			questionCode = value.toString() ;
			break;
		}
	}
}
