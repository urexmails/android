//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version Beta 1.2
//
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Beta Version
//
package com.contactpoint.model.client.prv;

import java.util.Hashtable;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class PRVResult implements KvmSerializable {

	public String NAMESPACE = "http://TMSConsultant.Model/2013/ProcessPRV";
	public String moveNumber;
	public Name name;
	public String clientCode;
	public String zone;
	public String suburb;
	public String pRVStartDate;
	public String pRVEndDate;
	public String bookedDateTime;
	public String originalBookedDateTime;
	public String sensitive;
	public String orderLineId;
	public String pONumber;
	public boolean isMM;

	public PRVResult(){}

	public PRVResult(SoapObject soapObject){

		if (soapObject.hasProperty("MoveNumber"))
		{
			Object obj = soapObject.getProperty("MoveNumber");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j8 =(SoapPrimitive) soapObject.getProperty("MoveNumber");
				moveNumber = j8.toString();
			}
		}
		if (soapObject.hasProperty("Name"))
		{
			SoapObject j9 = (SoapObject)soapObject.getProperty("Name");
			name =  new Name (j9);

		}
		if (soapObject.hasProperty("ClientCode"))
		{
			Object obj = soapObject.getProperty("ClientCode");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j10 =(SoapPrimitive) soapObject.getProperty("ClientCode");
				clientCode = j10.toString();
			}
		}
		if (soapObject.hasProperty("Zone"))
		{
			Object obj = soapObject.getProperty("Zone");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j11 =(SoapPrimitive) soapObject.getProperty("Zone");
				zone = j11.toString();
			}
		}
		if (soapObject.hasProperty("Suburb"))
		{
			Object obj = soapObject.getProperty("Suburb");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j12 =(SoapPrimitive) soapObject.getProperty("Suburb");
				suburb = j12.toString();
			}
		}
		if (soapObject.hasProperty("PRVStartDate"))
		{
			Object obj = soapObject.getProperty("PRVStartDate");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j13 =(SoapPrimitive) soapObject.getProperty("PRVStartDate");
				pRVStartDate = j13.toString();
			}
		}
		if (soapObject.hasProperty("PRVEndDate"))
		{
			Object obj = soapObject.getProperty("PRVEndDate");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j14 =(SoapPrimitive) soapObject.getProperty("PRVEndDate");
				pRVEndDate = j14.toString();
			}
		}
		if (soapObject.hasProperty("BookedDateTime"))
		{
			Object obj = soapObject.getProperty("BookedDateTime");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j15 =(SoapPrimitive) soapObject.getProperty("BookedDateTime");
				bookedDateTime = j15.toString();
			}
		}
		if (soapObject.hasProperty("OriginalBookedDateTime"))
		{
			Object obj = soapObject.getProperty("OriginalBookedDateTime");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j16 =(SoapPrimitive) soapObject.getProperty("OriginalBookedDateTime");
				originalBookedDateTime = j16.toString();
			}
		}
		if (soapObject.hasProperty("Sensitive"))
		{
			Object obj = soapObject.getProperty("Sensitive");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j17 =(SoapPrimitive) soapObject.getProperty("Sensitive");
				sensitive = j17.toString();
			}
		}
		if (soapObject.hasProperty("OrderLineId"))
		{
			Object obj = soapObject.getProperty("OrderLineId");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j18 =(SoapPrimitive) soapObject.getProperty("OrderLineId");
				orderLineId = j18.toString();
			}
		}
		if (soapObject.hasProperty("PONumber"))
		{
			Object obj = soapObject.getProperty("PONumber");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j19 =(SoapPrimitive) soapObject.getProperty("PONumber");
				pONumber = j19.toString();
			}
		}
	}
	@Override
	public Object getProperty(int arg0) {
		switch(arg0){
		case 0:
			return moveNumber;
		case 1:
			return name;
		case 2:
			return clientCode;
		case 3:
			return zone;
		case 4:
			return suburb;
		case 5:
			return pRVStartDate;
		case 6:
			return pRVEndDate;
		case 7:
			return bookedDateTime;
		case 8:
			return originalBookedDateTime;
		case 9:
			return sensitive;
		case 10:
			return orderLineId;
		case 11:
			return pONumber;
		}
		return null;
	}
	@Override
	public int getPropertyCount() {
		return 12;
	}
	@Override
	public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
		switch(index){
		case 0:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "MoveNumber";
			break;
		case 1:
			info.type = Name.class;
			info.name = "Name";
			break;
		case 2:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "ClientCode";
			break;
		case 3:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Zone";
			break;
		case 4:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Suburb";
			break;
		case 5:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "PRVStartDate";
			break;
		case 6:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "PRVEndDate";
			break;
		case 7:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "BookedDateTime";
			break;
		case 8:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "OriginalBookedDateTime";
			break;
		case 9:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Sensitive";
			break;
		case 10:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "OrderLineId";
			break;
		case 11:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "PONumber";
			break;
		}
	}
	@Override
	public void setProperty(int index, Object value) {
		switch(index){
		case 0:
			moveNumber = value.toString() ;
			break;
		case 1:
			name = (Name)value;
			break;
		case 2:
			clientCode = value.toString() ;
			break;
		case 3:
			zone = value.toString() ;
			break;
		case 4:
			suburb = value.toString() ;
			break;
		case 5:
			pRVStartDate = value.toString() ;
			break;
		case 6:
			pRVEndDate = value.toString() ;
			break;
		case 7:
			bookedDateTime = value.toString() ;
			break;
		case 8:
			originalBookedDateTime = value.toString() ;
			break;
		case 9:
			sensitive = value.toString() ;
			break;
		case 10:
			orderLineId = value.toString() ;
			break;
		case 11:
			pONumber = value.toString() ;
			break;
		}
	}
}
