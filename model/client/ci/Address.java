//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version Beta 1.2
//
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Beta Version
//
package com.contactpoint.model.client.ci;

import java.io.Serializable;
import java.util.Hashtable;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Address implements KvmSerializable, Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7083388401174407674L;
	public String NAMESPACE = "http://TMSConsultant.Model/2013/ProcessCI";
	public String streetAddress1;
	public String streetAddress2;
	public String suburb;
	public String state;
	public String postcode;
	public String country;

	public Address(){}
	
	@Override
	public String toString() {
		String fullAddress = "";
		if (streetAddress1 != null && streetAddress1.length() != 0) fullAddress += streetAddress1 + "\n";
		if (streetAddress2 != null && streetAddress2.length() != 0) fullAddress += streetAddress2 + "\n";
		if (suburb != null && suburb.length() != 0) fullAddress += suburb + "\n";
		if (state != null && state.length() != 0) fullAddress += state + " " + postcode + "\n";
		if (country != null && country.length() != 0) fullAddress += country + "\n";
		return fullAddress;
	}

	public Address(SoapObject soapObject){

		if (soapObject.hasProperty("StreetAddress1"))
		{
			Object obj = soapObject.getProperty("StreetAddress1");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j41 =(SoapPrimitive) soapObject.getProperty("StreetAddress1");
				streetAddress1 = j41.toString();
			}
		}
		if (soapObject.hasProperty("StreetAddress2"))
		{
			Object obj = soapObject.getProperty("StreetAddress2");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j42 =(SoapPrimitive) soapObject.getProperty("StreetAddress2");
				streetAddress2 = j42.toString();
			}
		}
		if (soapObject.hasProperty("Suburb"))
		{
			Object obj = soapObject.getProperty("Suburb");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j43 =(SoapPrimitive) soapObject.getProperty("Suburb");
				suburb = j43.toString();
			}
		}
		if (soapObject.hasProperty("State"))
		{
			Object obj = soapObject.getProperty("State");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j44 =(SoapPrimitive) soapObject.getProperty("State");
				state = j44.toString();
			}
		}
		if (soapObject.hasProperty("Postcode"))
		{
			Object obj = soapObject.getProperty("Postcode");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j45 =(SoapPrimitive) soapObject.getProperty("Postcode");
				postcode = j45.toString();
			}
		}
		if (soapObject.hasProperty("Country"))
		{
			Object obj = soapObject.getProperty("Country");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j46 =(SoapPrimitive) soapObject.getProperty("Country");
				country = j46.toString();
			}
		}
	}
	@Override
	public Object getProperty(int arg0) {
		switch(arg0){
		case 0:
			return streetAddress1;
		case 1:
			return streetAddress2;
		case 2:
			return suburb;
		case 3:
			return state;
		case 4:
			return postcode;
		case 5:
			return country;
		}
		return null;
	}
	@Override
	public int getPropertyCount() {
		return 6;
	}
	@Override
	public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
		switch(index){
		case 0:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "StreetAddress1";
			break;
		case 1:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "StreetAddress2";
			break;
		case 2:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Suburb";
			break;
		case 3:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "State";
			break;
		case 4:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Postcode";
			break;
		case 5:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Country";
			break;
		}
	}
	@Override
	public void setProperty(int index, Object value) {
		switch(index){
		case 0:
			streetAddress1 = value.toString() ;
			break;
		case 1:
			streetAddress2 = value.toString() ;
			break;
		case 2:
			suburb = value.toString() ;
			break;
		case 3:
			state = value.toString() ;
			break;
		case 4:
			postcode = value.toString() ;
			break;
		case 5:
			country = value.toString() ;
			break;
		}
	}
}
