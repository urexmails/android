//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version Beta 1.2
//
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Beta Version
//
package com.contactpoint.model.client.ci;

import java.io.Serializable;
import java.util.Hashtable;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class CIDownload implements KvmSerializable, Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -853161547005552243L;
	public String NAMESPACE ="http://TMSConsultant.Model/2013/ProcessCI";
	public String moveNumber;
	public Name memberName;
	public Address memberAddress;
	public Contact memberContact;
	public String moveDate;
	public String region;
	public String zone;
	public String volume;
	public String poNumber;
	public String cIType;
	public String caseNumber;
	public String supplierCode;
	public String supplierName;
	public String employeeCode;
	public String sensitive;

	public CIDownload(){}

	public CIDownload(SoapObject soapObject){

		if (soapObject.hasProperty("MoveNumber"))
		{
			Object obj = soapObject.getProperty("MoveNumber");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j22 =(SoapPrimitive) soapObject.getProperty("MoveNumber");
				moveNumber = j22.toString();
			}
		}
		if (soapObject.hasProperty("MemberName"))
		{
			SoapObject j23 = (SoapObject)soapObject.getProperty("MemberName");
			memberName =  new Name (j23);

		}
		if (soapObject.hasProperty("MemberAddress"))
		{
			SoapObject j24 = (SoapObject)soapObject.getProperty("MemberAddress");
			memberAddress =  new Address (j24);

		}
		if (soapObject.hasProperty("MemberContact"))
		{
			SoapObject j25 = (SoapObject)soapObject.getProperty("MemberContact");
			memberContact =  new Contact (j25);

		}
		if (soapObject.hasProperty("MoveDate"))
		{
			Object obj = soapObject.getProperty("MoveDate");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j26 =(SoapPrimitive) soapObject.getProperty("MoveDate");
				moveDate = j26.toString();
			}
		}
		if (soapObject.hasProperty("Region"))
		{
			Object obj = soapObject.getProperty("Region");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j27 =(SoapPrimitive) soapObject.getProperty("Region");
				region = j27.toString();
			}
		}
		if (soapObject.hasProperty("Zone"))
		{
			Object obj = soapObject.getProperty("Zone");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j28 =(SoapPrimitive) soapObject.getProperty("Zone");
				zone = j28.toString();
			}
		}
		if (soapObject.hasProperty("Volume"))
		{
			Object obj = soapObject.getProperty("Volume");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j29 =(SoapPrimitive) soapObject.getProperty("Volume");
				volume = j29.toString();
			}
		}
		if (soapObject.hasProperty("PoNumber"))
		{
			Object obj = soapObject.getProperty("PoNumber");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j30 =(SoapPrimitive) soapObject.getProperty("PoNumber");
				poNumber = j30.toString();
			}
		}
		if (soapObject.hasProperty("CIType"))
		{
			Object obj = soapObject.getProperty("CIType");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j31 =(SoapPrimitive) soapObject.getProperty("CIType");
				cIType = j31.toString();
			}
		}
		if (soapObject.hasProperty("CaseNumber"))
		{
			Object obj = soapObject.getProperty("CaseNumber");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j32 =(SoapPrimitive) soapObject.getProperty("CaseNumber");
				caseNumber = j32.toString();
			}
		}
		if (soapObject.hasProperty("SupplierCode"))
		{
			Object obj = soapObject.getProperty("SupplierCode");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j33 =(SoapPrimitive) soapObject.getProperty("SupplierCode");
				supplierCode = j33.toString();
			}
		}
		if (soapObject.hasProperty("SupplierName"))
		{
			Object obj = soapObject.getProperty("SupplierName");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j34 =(SoapPrimitive) soapObject.getProperty("SupplierName");
				supplierName = j34.toString();
			}
		}
		if (soapObject.hasProperty("EmployeeCode"))
		{
			Object obj = soapObject.getProperty("EmployeeCode");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j35 =(SoapPrimitive) soapObject.getProperty("EmployeeCode");
				employeeCode = j35.toString();
			}
		}
		if (soapObject.hasProperty("Sensitive"))
		{
			Object obj = soapObject.getProperty("Sensitive");
			if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j36 =(SoapPrimitive) soapObject.getProperty("Sensitive");
				sensitive = j36.toString();
			}
		}
	}
	@Override
	public Object getProperty(int arg0) {
		switch(arg0){
		case 0:
			return moveNumber;
		case 1:
			return memberName;
		case 2:
			return memberAddress;
		case 3:
			return memberContact;
		case 4:
			return moveDate;
		case 5:
			return region;
		case 6:
			return zone;
		case 7:
			return volume;
		case 8:
			return poNumber;
		case 9:
			return cIType;
		case 10:
			return caseNumber;
		case 11:
			return supplierCode;
		case 12:
			return supplierName;
		case 13:
			return employeeCode;
		case 14:
			return sensitive;
		}
		return null;
	}
	@Override
	public int getPropertyCount() {
		return 15;
	}
	@Override
	public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
		switch(index){
		case 0:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "MoveNumber";
			break;
		case 1:
			info.type = Name.class;
			info.name = "MemberName";
			break;
		case 2:
			info.type = Address.class;
			info.name = "MemberAddress";
			break;
		case 3:
			info.type = Contact.class;
			info.name = "MemberContact";
			break;
		case 4:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "MoveDate";
			break;
		case 5:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Region";
			break;
		case 6:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Zone";
			break;
		case 7:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Volume";
			break;
		case 8:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "PoNumber";
			break;
		case 9:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "CIType";
			break;
		case 10:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "CaseNumber";
			break;
		case 11:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "SupplierCode";
			break;
		case 12:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "SupplierName";
			break;
		case 13:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "EmployeeCode";
			break;
		case 14:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Sensitive";
			break;
		}
	}
	@Override
	public void setProperty(int index, Object value) {
		switch(index){
		case 0:
			moveNumber = value.toString() ;
			break;
		case 1:
			memberName = (Name)value;
			break;
		case 2:
			memberAddress = (Address)value;
			break;
		case 3:
			memberContact = (Contact)value;
			break;
		case 4:
			moveDate = value.toString() ;
			break;
		case 5:
			region = value.toString() ;
			break;
		case 6:
			zone = value.toString() ;
			break;
		case 7:
			volume = value.toString() ;
			break;
		case 8:
			poNumber = value.toString() ;
			break;
		case 9:
			cIType = value.toString() ;
			break;
		case 10:
			caseNumber = value.toString() ;
			break;
		case 11:
			supplierCode = value.toString() ;
			break;
		case 12:
			supplierName = value.toString() ;
			break;
		case 13:
			employeeCode = value.toString() ;
			break;
		case 14:
			sensitive = value.toString() ;
			break;
		}
	}
}
