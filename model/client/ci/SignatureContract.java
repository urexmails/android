//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version Beta 1.2
//
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Beta Version
//
package com.contactpoint.model.client.ci;

import java.util.Hashtable;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class SignatureContract implements KvmSerializable {

	public static final String NAMESPACE = "http://TMSConsultant.Model/2013/TMSConsultant";
	public final static String MM_NAMESPACE = "http://schemas.datacontract.org/2004/07/TollTransitions.API.DataContracts";
	public String type;
	public Object signature;
	public boolean isMM;

	public SignatureContract(){}

	public SignatureContract(SoapObject soapObject){

		if (soapObject.hasProperty("Type"))
		{
			Object obj = soapObject.getProperty("Type");
			if (obj.getClass().equals(SoapPrimitive.class)){
				SoapPrimitive j9 =(SoapPrimitive) soapObject.getProperty("Type");
				type = j9.toString();
			}
		}
		if (soapObject.hasProperty("Signature"))
		{
			SoapObject j10 = (SoapObject)soapObject.getProperty("Signature");
			signature =  j10.toString();

		}
	}
	@Override
	public Object getProperty(int arg0) {
		switch(arg0){
		case 0:
			return type;
		case 1:
			return signature;
		}
		return null;
	}
	@Override
	public int getPropertyCount() {
		return 2;
	}
	@Override
	public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
		if (isMM) {
			info.namespace = MM_NAMESPACE;
		} else {
			info.namespace = NAMESPACE;
		}
		switch(index){
		case 0:
			info.type = PropertyInfo.STRING_CLASS;
			info.name = "Type";
			break;
		case 1:
			if (isMM) {
				info.type = PropertyInfo.STRING_CLASS;
			} else {
				info.type = Object.class;
			}
			info.name = "Signature";
			break;
		}
	}
	@Override
	public void setProperty(int index, Object value) {
		switch(index){
		case 0:
			type = value.toString() ;
			break;
		case 1:
			signature = (Object)value;
			break;
		}
	}
}
